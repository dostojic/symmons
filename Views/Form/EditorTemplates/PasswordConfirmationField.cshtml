@model Sitecore.Forms.Mvc.Models.Fields.PasswordConfirmationField


@if (!Model.Visible)
{
    return;
}

<div class=" @Model.CssClass field-border">

    @if (Model.ShowLegend)
    {
        <label for="@Html.AttributeEncode(Model.Name)" class="@Model.CssClass field-title">@Html.Encode(Model.PasswordTitle)</label>
    }

    @Html.HiddenFor(x => Model.FieldId)

    <div class="@Model.CssClass field-panel">

        <div class="@Model.CssClass field-content">

            @Html.EditorFor(x => Model.Value)

        </div>

        @Html.ValidationMessageFor(field => Model.Value, null, new { @class = "scfValidator " + @Model.CssClass + " field-error" })

        @if (!String.IsNullOrEmpty(Model.PasswordHelp))
        {
            <span class="@Model.CssClass field-info">@Html.DisplayFor(x => Model.PasswordHelp)</span>
        }
    </div>


    @if (Model.ShowLegend)
    {
        <label for="@Html.AttributeEncode(Model.Name)" class="@Model.CssClass field-title">@Html.Encode(Model.ConfirmationTitle)</label>
    }

    <div class="@Model.CssClass field-panel">

        <div class="@Model.CssClass field-content">

            @Html.EditorFor(x => Model.Confirmation)

        </div>

        @Html.ValidationMessageFor(field => Model.Confirmation, null, new { @class = @Model.CssClass + " field-error" })

        @if (!String.IsNullOrEmpty(Model.ConfirmationHelp))
        {
            <span class="@Model.CssClass field-info">@Html.DisplayFor(x => Model.ConfirmationHelp)</span>
        }
    </div>

   @if (Model.IsRequired)
    { 
        <span class="@Model.CssClass field-required">*</span> 
    }

</div>

