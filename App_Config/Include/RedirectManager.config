<!--
Purpose: This include file is to enable the Redirect Tool by overwrite the item not found handler
To enable this, rename this file so that it has a ".config" extension
-->

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>

      <!--  CUSTOM 404 URL
            This is the root relative URL of the custom 404 page
            If you have multiple websites in one Sitecore instance, this will work globally.
            However, you need to have the same custom 404 across the sites
            i.e. www.site1.com/not-found, www.site2.com/not-found, www.site3.com/not-found
      -->
      <setting name="Verndale.SitecoreModule.RedirectManager.Custom404URL" value="/Error-404.aspx" />

      <!--  ITEM NOT FOUND HANDLER
            Url of page handling 'Item not found' errors
            his is to overwrite the default Sitecore handler to use the new handler from the RedirectTool
      -->
      <setting name="ItemNotFoundUrl">
        <patch:attribute name="value">/sitecore modules/shell/Redirect/NotFound.aspx</patch:attribute>
      </setting>

		 <!--  LAYOUT NOT FOUND HANDLER
            Url of page handling 'Layout not found' errors
      -->
		 <setting name="LayoutNotFoundUrl">
			 <patch:attribute name="value">/sitecore modules/shell/Redirect/NotFound.aspx</patch:attribute>
		 </setting>

		 <!--  LINK ITEM NOT FOUND HANDLER
            Url of page handling 'Link item not found' errors
      -->
		 <setting name="LinkItemNotFoundUrl">
			 <patch:attribute name="value">/sitecore modules/shell/Redirect/NotFound.aspx</patch:attribute>
		 </setting>
      
      <!--  USE SERVER-SIDE REDIRECT FOR REQUEST ERRORS
            Overwrite the default value (false) because the Redirect Manager needs to use Server.Transfer instead of Response.Redirect 
            to redirect request to service pages when an error occurs (item not found, access denied etc).
            This will allow the Redirect Manager to set an appropriate response code.
      -->
      <setting name="RequestErrors.UseServerSideRedirect">
        <patch:attribute name="value">true</patch:attribute>
      </setting>
      
      <!--  SAVE RAW URL ON LOGIN
            Specifies whether the original request URL is passed to the login page 
            (saved in 'url' query string parameter).
            Default: false
      -->
      <setting name="Authentication.SaveRawUrl">
        <patch:attribute name="value">true</patch:attribute>
      </setting>
      
      <!--  DEBUG
            Set to true to log redirect info to the log file
      -->
      <setting name="Verndale.SitecoreModule.RedirectManager.Debug" value="true" />
    </settings>
    
    <commands>
      <command name="redirectmanager:delete" type="Verndale.SitecoreModule.RedirectManager.Commands.Delete,Verndale.SitecoreModule.RedirectManager"/>
      <command name="redirectmanager:newredirect" type="Verndale.SitecoreModule.RedirectManager.Commands.New,Verndale.SitecoreModule.RedirectManager"/>
      <command name="redirectmanager:clearall" type="Verndale.SitecoreModule.RedirectManager.Commands.ClearAll,Verndale.SitecoreModule.RedirectManager"/>
      <command name="redirectmanager:import" type="Verndale.SitecoreModule.RedirectManager.Commands.Import,Verndale.SitecoreModule.RedirectManager"/>
      <command name="redirectmanager:export" type="Verndale.SitecoreModule.RedirectManager.Commands.Export,Verndale.SitecoreModule.RedirectManager"/>
    </commands>    
  </sitecore>
</configuration>