@using Sitecore.Globalization
@using symmons.com.Areas.Symmons.Controllers.Global
@using symmons.com.Areas.Symmons.Models.Pages.Products
@using symmons.com._Classes.Shared.Global
@using symmons.com._Classes.Symmons.Global
@using Sitecore.Data.Items
@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<symmons.com.Areas.Symmons.Models.Modules.Callouts.Products.CategoryCallout>

@{
    var isKitchenStyle = Request.QueryString[Constants.ConstantValues.SuperCategory] != null && Request.QueryString[Constants.ConstantValues.SuperCategory].Equals(Constants.ConstantValues.Kitchen);

    var products = isKitchenStyle ? Model.KitchenProducts : Model.Products;

    if (IsInEditingMode)
    {
        products = Model.Products.Any() ? Model.Products : Model.KitchenProducts;
    }
}

@if (Model != null)
{
    var productDetails = products as IList<ProductDetails> ?? products.ToList();
    if (productDetails.Any() && Model.ProductCategory != null)
    {
        <section class="section-content-wrapper" role="contentinfo">
            @if (Model.ProductCategory != null)
            {
                if (!string.IsNullOrEmpty(Model.ProductCategory.CategoryName))
                {
                    <h3 class="collection-title">
                        @Editable(x => x.ProductCategory.CategoryName)
                    </h3>
                }
            }
            @if (productDetails.Any())
            {
                var prodArray = new ProductDetails[] { null, null, null };

                var prods = productDetails.Take(3);
                var j = 0;
                foreach (var prod in prods)
                {
                    prodArray[j++] = prod;
                }
                <ul class='product-listing' data-slider data-duration="0" data-start-random="false">
                    @for (var i = 0; i < 3; i++)
                    {
                        var product = prodArray[i];
                        var isProductListingHidden = product != null ? string.Empty : "hidden";

                        if (product != null)
                        {
                          <li class="product-listing-item @isProductListingHidden">
                              <a href="@SymmonsHelper.GetProductUrl(product, Request.Url)">
                                  <figure class="product-image">
                                      @if (product.IsNew)
                                      {
                                          <div class='product-browse__listingcontent--newproduct'>New</div>
                                      }
                                      @if (SymmonsHelper.IsValidImage(product.ListingImage))
                                      {
                                          @RenderImage(product, x => x.ListingImage)
                                      }
                                  </figure>
                                  @if (!string.IsNullOrEmpty(product.ProductName))
                                  {
                                      <h4 class="product-caption">
                                          @Editable(product, x => x.ProductName)
                                      </h4>
                                  }
                              </a>
                          </li>
                        }
                    }
                </ul>

                    var catUrl = string.Empty;
                    var collectionListingClass = "hidden";
                    if (productDetails.Count > 2)
                    {
                        collectionListingClass = string.Empty;
                        var browsePageUrl = SymmonsHelper.GetPageUrl(Constants.PageIds.ProductBrowse);

                        var productCalloutItem = SymmonsController.SitecoreCurrentContext.GetCurrentItem<Item>();

                        if (productCalloutItem.TemplateID.ToString().Equals(Constants.TemplateIds.FeatureLandingPage))
                        {
                            var productFeatures = SymmonsController.SitecoreCurrentContext.GetCurrentItem<ProductSmartFeatures>();
                            if (productFeatures != null)
                            {
                                catUrl = string.Format("{0}?{1}={2}&{3}={4}", browsePageUrl, Constants.QueryString.CategoryId,
                                    Model.ProductCategory.Id.ToString("B").ToLower(), Constants.QueryString.FeatureId,
                                    productFeatures.Id.ToString("B").ToLower());

                            }
                        }
                        else if (productCalloutItem.TemplateID.ToString().Equals(Constants.TemplateIds.CollectionLandingPage))
                        {
                            var productCollection = SymmonsController.SitecoreCurrentContext.GetCurrentItem<ProductCollection>();
                            if (productCollection != null)
                            {
                                var categoryQueryString = string.Format("{0}={1}", Constants.QueryString.CategoryId,
                                    Model.ProductCategory.Id.ToString("B").ToLower());
                                var collectionQueryString = string.Format("{0}={1}", Constants.QueryString.CollectionId,
                                    productCollection.Id.ToString("B").ToLower());
                                catUrl = string.Format("{0}?{1}&{2}", browsePageUrl, categoryQueryString, collectionQueryString);

                                if (Request.QueryString[Constants.QueryString.StyleId] != null)
                                {
                                    var styleQueryString = string.Format("{0}={1}", Constants.QueryString.StyleId,
                                        Request.QueryString[Constants.QueryString.StyleId]);
                                    catUrl = string.Format("{0}?{1}&{2}&{3}", browsePageUrl, categoryQueryString,
                                        collectionQueryString, styleQueryString);
                                }
                            }
                        }
                        else if (productCalloutItem.TemplateID.ToString().Equals(Constants.TemplateIds.StyleLandingPage))
                        {
                            var productStyle = SymmonsController.SitecoreCurrentContext.GetCurrentItem<ProductStyle>();
                            if (productStyle != null)
                            {
                                catUrl = string.Format("{0}?{1}={2}&{3}={4}", browsePageUrl, Constants.QueryString.CategoryId,
                                    Model.ProductCategory.Id.ToString("B").ToLower(), Constants.QueryString.StyleId,
                                    productStyle.Id.ToString("B").ToLower());
                            }
                        }
                    }
                    if (!string.IsNullOrEmpty(catUrl))
                    {
                        <div class="collection-listing__ctawrap @collectionListingClass">
                            <a href="@catUrl" class="collection-listing__cta">@Translate.Text(Constants.Dictionary.MoreLabel)</a>
                        </div>
                    }
            }
        </section>
    }
}
