@using Sitecore.Globalization
@using symmons.com.Areas.Symmons.Controllers.Global
@using symmons.com.Areas.Symmons.Models.Pages.Products
@using symmons.com._Classes.Shared.Global
@using symmons.com._Classes.Symmons.Global
@using symmons.com._Classes.Symmons.Helpers
@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<symmons.com.Areas.Symmons.Models.Modules.Callouts.Products.ApprovedProductsCallout>

@if (Model != null)
{
    if (Model.Products != null && Model.Products.Any())
    {
        <section class="approved-products__group">
            @if (!string.IsNullOrEmpty(Model.ProductsTitle) && Model.Products != null)
            {
                <h3 class="approved-products__grouptitle">
                    @Editable(x => x.ProductsTitle)
                </h3>
            }
            @*Main content will be shown only when template type is equal to design studio Product browse*@
            @if (SymmonsController.ContextItem.TemplateID.ToString() == Constants.TemplateIds.DesignStudioProductBrowse)
            {
                var designStudioProductBrowseItem = SymmonsController.SitecoreCurrentContext.GetCurrentItem<ApprovedProducts>();
                if (!String.IsNullOrEmpty(designStudioProductBrowseItem.MainContent))
                {
                    <p class="approved-products__groupcontent">
                        @Html.Raw(Editable(designStudioProductBrowseItem, x => x.MainContent))
                    </p>
                }
            }

            @if (Model.Products != null && Model.Products.Any())
            {
                <ul class="approved-products__listingcontent">
                    @foreach (var product in Model.Products)
                    {
                        if (product != null)
                        {
                            <li class="approved-products__listingcontent--item">
                                @if (product.IsNew)
                                {
                                    <div class="approved-products__listingcontent--newproduct">New</div>
                                }
                                <figure class="approved-products__listingcontent--image">
                                    @if (SymmonsHelper.IsValidImage(product.ListingImage))
                                    {
                                        @RenderImage(product, x => x.ListingImage)
                                    }
                                </figure>

                                <div class="approved-products__listingcontent--productcontent">
                                    @if (product.IsStarterIdea)
                                    {
                                        <h4 class="approved-products__listingcontent--starteridea">@Translate.Text(Constants.Dictionary.StarterIdea)</h4>
                                    }
                                    @if (!string.IsNullOrEmpty(product.ProductName))
                                    {
                                        <a class="approved-products__listingcontent--productname" href="@SymmonsHelper.GetProductUrl(product, Request.Url)">
                                            @Editable(product, x => x.ProductName)
                                        </a>
                                    }
                                    @{
                                    double canPrice;
                                    var canPriceString = double.TryParse(product.CanPrice, out canPrice) ? canPrice.ToString("N") : product.CanPrice;
                                    var showCanPrice = canPrice > 0;

                                    double minPrice;
                                    var minPriceString = double.TryParse(product.PriceMin, out minPrice) ? minPrice.ToString("N") : product.PriceMin;
                                    var showPrice = minPrice > 0;
                                    }
                                    @if (LocationsHelper.IsCaSite())
                                    {
                                        if (Sitecore.Context.PageMode.IsPageEditor)
                                        {
                                            <p class="approved-products__listingcontent--productprice">@Translate.Text(Constants.Dictionary.ListPrice) $ @Editable(product, x => x.CanPrice)</p>
                                        }
                                        else
                                        {
                                            if (showCanPrice)
                                            {
                                                <p class="approved-products__listingcontent--productprice">@Translate.Text(Constants.Dictionary.ListPrice) $@canPriceString</p>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (showPrice)
                                        {
                                            if (Sitecore.Context.PageMode.IsPageEditor)
                                            {
                                                <p class="approved-products__listingcontent--productprice">@Translate.Text(Constants.Dictionary.ListPrice) $ @Editable(product, x => x.PriceMin)</p>
                                            }
                                            else
                                            {
                                                if (showCanPrice)
                                                {
                                                    <p class="approved-products__listingcontent--productprice">@Translate.Text(Constants.Dictionary.ListPrice) $@minPriceString</p>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </li>
                        }
                    }
                </ul>
            }
        </section>
    }
}
