@using Sitecore.Globalization
@using symmons.com._Classes.Symmons.Global
@using symmons.com._Classes.Symmons.Helpers
@using Constants = symmons.com._Classes.Shared.Global.Constants
@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<symmons.com.Areas.Symmons.Models.Modules.Home.HeroSlideModule>

@{
    var dataDuration = 0;
    if ((Model.HeroSlides != null) && (Model.HeroSlides.Count() > 1))
    {
        dataDuration = 6;
    }
}

@if ((Model.HeroSlides != null) && (Model.HeroSlides.Any()))
{
    <section class="hero-slider">
        <div class="hero-slider__wrapper">
            <ul class="hero-slider__container" data-slider data-duration="@dataDuration" data-start-random="true">
                @foreach (var heroSlide in Model.HeroSlides)
                {
                    <li class="hero-slider__item">
                        @{
                    var desktopSlideImage = heroSlide.SlideImage != null ? heroSlide.SlideImage.Src : string.Empty;
                    var mobileSlideImage = heroSlide.SlideMobileImage != null ? heroSlide.SlideMobileImage.Src : string.Empty;
                        }
                        <div class="hero-slider__image" data-attr-desktopimage="@Editable(desktopSlideImage, x => x, null)" data-attr-mobileimage="@Editable(mobileSlideImage, x => x, null)"></div>
                        @if (!string.IsNullOrEmpty(heroSlide.SlideTitle) || !string.IsNullOrEmpty(heroSlide.SlideDescription) || SymmonsHelper.IsValidLink(heroSlide.LearnMoreLink))
                        {
                            <div class="hero-slider__textwrapper">
                                <div class="hero-slider__text-container">
                                    @if (Sitecore.Context.PageMode.IsPageEditor)
                                    {
                                        if (!string.IsNullOrEmpty(heroSlide.SlideTitle))
                                        {
                                            <h2 class="hero-slider__title">@Editable(heroSlide, x => x.SlideTitle)</h2>
                                        }
                                        if (!string.IsNullOrEmpty(heroSlide.SlideDescription))
                                        {
                                            <p class="hero-slider__teaser">@Editable(heroSlide, x => x.SlideDescription)</p>
                                        }
                                    }
                                    else
                                    {
                                        if (!string.IsNullOrEmpty(heroSlide.SlideTitle))
                                        {
                                            <h2 class="hero-slider__title">@DataHelper.GetParsedString(heroSlide.SlideTitle, int.Parse(Translate.Text(Constants.Dictionary.MaxLength50)))</h2>
                                        }
                                        if (!string.IsNullOrEmpty(heroSlide.SlideDescription))
                                        {
                                            <p class="hero-slider__teaser">@DataHelper.GetParsedString(heroSlide.SlideDescription, int.Parse(Translate.Text(Constants.Dictionary.MaxLength170)))</p>
                                        }
                                    }
                                    @if (SymmonsHelper.IsValidLink(heroSlide.LearnMoreLink))
                                    {
                                        @RenderLink(heroSlide, x => x.LearnMoreLink, new { @class = "button-primary" }, true, Translate.Text(Constants.Dictionary.LearnMore))
                                    }
                                </div>
                            </div>
                        }
                    </li>
                }
            </ul>
        </div>
    </section>
}